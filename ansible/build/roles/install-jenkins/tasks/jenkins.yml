- debug:
    msg: 'Start jenkins installation'

- name: 'Echo PATH' 
  shell: 'echo $PATH'

- name: 'whereis' 
  shell: 'whereis sudo'

- name: 'Find waldo'
  shell: 'find /usr -name sudo'

- name: 'Print release'
  shell: 'cat /etc/*release'

- name: 'Print release'
  shell: 'uname -r'
  
- name: Add jenkins key
  ansible.builtin.rpm_key:
    state: present
    key: https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
- name: Add repo
  shell: |
     curl -o /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo

- name: 'Install dependecies'
  yum:
    name:
      - net-tools
      - java-17-amazon-corretto
    state: present
    update_cache: true


- name: 'Install jenkins'
  yum:
    name:
      - jenkins
    state: present
    update_cache: true
  register: jenkins_result
  until: jenkins_result is success
  retries: 3
  delay: 3

- name: 'Start jenkins to generate inital password and instal plugins. We will start it manually later from userdata'
  service: 
    name: jenkins 
    state: started 
    enabled: no

- name: 'Ensure enkins is running'
  command: 'curl -D - -s --max-time 5 http://127.0.0.1:8080/cli/'
  register: result
  until: '(result.stdout.find("403 Forbidden") != -1) or (result.stdout.find("200 OK") != -1) and (result.stdout.find("Please wait while") == -1)'
  retries: "20"
  delay: "5"
  changed_when: false
  check_mode: false

- name: 'Check where initial admin password is stored'
  shell: 'find /var/ -name initialAdminPa*'

- name: 'Read password'
  command: 'cat /var/lib/jenkins/secrets/initialAdminPassword'
  register: inital_admin_password

- name: 'Set admin password to facts' 
  set_fact:
    jenkins_admin_password: '{{inital_admin_password.stdout }}'

- name: 'Prepare update directory to avoid failure'
  file:
    path: "/var/lib/jenkins/updates"
    state: directory
    owner: jenkins 
    group: jenkins

- name: 'Downloads plugins updated'
  get_url:
    url: "https://updates.jenkins.io/update-center.json"
    dest: "/var/lib/jenkins/updates/default.json"
    owner: jenkins
    group: jenkins
    mode: 0440
  changed_when: false
  register: get_result
  until: get_result is success
  retries: 5
  delay: 10

- name: 'Remove JS wrapper from file (First and last line)' 
  replace:
    path: "/var/lib/jenkins/updates/default.json"
    regexp: "1d;$d"

- include_tasks: plugin.yml
  with_items: 
  - name: credentials
  - name: blueocean
  - name: reverse-proxy-auth-plugin
  - name: ec2
  - name: configuration-as-code
  - name: dashboard-view
  - name: antisamy-markup-formatter
  - name: build-name-setter
  - name: build-timeout
  - name: config-file-provider
  - name: credentials-binding
  - name: embeddable-build-status
  - name: rebuild
  - name: ssh-agent
  - name: throttle-concurrents
  - name: timestamper
  - name: ws-cleanup
  - name: workflow-aggregator
  - name: pipeline-stage-view
  - name: build-pipeline-plugin
  - name: conditional-buildstep
  - name: parameterized-trigger
  - name: git
  - name: git-parameter
  - name: repo
  - name: matrix-project
  - name: ssh-slaves
  - name: matrix-auth
  - name: email-ext
  - name: emailext-template
  - name: mailer
  - name: publish-over-ssh
  - name: gerrit-trigger
  - name: ssh
  - name: ansicolor
  - name: build-user-vars-plugin
  - name: uno-choice
  - name: docker-workflow
  - name: pipeline-graph-view

- name: 'Prepare update directory to avoid failure'
  file:
    path: "/etc/jenkins"
    state: directory
    owner: jenkins
    group: jenkins

- name: 'Copy jenkins configuration'
  template:
    src: jenkins-configuration.yml
    dest: /etc/jenkins/jenkins-configuration-template.yml
    owner: jenkins
    group: jenkins
    mode: '0644'

- name: 'Copy gerrit configuration'
  template:
    src: gerrit-trigger.xml
    dest: /etc/jenkins/gerrit-trigger-template.xml
    owner: jenkins
    group: jenkins
    mode: '0644'

- name: 'Add job to download environment configuration'
  cron:
    name: "check dirs"
    minute: "0"
    hour: "5,2"
    job: "ls -alh > /dev/null"

- name: 'Copy plugins'
  shell: |
      set -e
      mkdir -p /opt/jenkins/plugins/
      cp /var/lib/jenkins/plugins/*.jpi /opt/jenkins/plugins/ || echo "No filed found"
      cp /var/lib/jenkins/plugins/*.hpi /opt/jenkins/plugins/ || echo "No filed found"

- name: 'Add jekins configuration env variable'
  shell: |
     echo "CASC_JENKINS_CONFIG=/etc/jenkins/jenkins-configuration.yml" > /etc/environment
     
     ov="/etc/systemd/system/jenkins.service.d/override.conf"
     mkdir -p /etc/systemd/system/jenkins.service.d
     touch $ov
     
     echo '[Unit]' >> $ov 
     echo 'Description=My Company Jenkins Controller' >> $ov 
     echo "" >> $ov 
     echo '[Service]' >> $ov 
     echo 'Environment="CASC_JENKINS_CONFIG=/etc/jenkins/jenkins-configuration.yml"' >> $ov 
     echo 'Environment="JENKINS_PORT=8082"' >> $ov
     echo 'Environment="JAVA_ARGS=-Djenkins.install.runSetupWizard=false"' >> $ov
     
     sed -i 's#<installStateName>NEW.*#<installStateName>RUNNING<\/installStateName>#g' /var/lib/jenkins/config.xml
     
     systemctl daemon-reload
     
- name: 'Add jenkins default config to test strtup'
  shell: |
      cat <<EOF > /etc/jenkins/jenkins-configuration.yml
      jenkins:
        agentProtocols:
        - "JNLP4-connect"
        - "Ping"
        crumbIssuer:
          standard:
            excludeClientIPFromCrumb: false
        disableRememberMe: false
        labelAtoms:
        - name: "built-in"
        markupFormatter: "plainText"
        mode: NORMAL
        myViewsTabBar: "standard"
        nodeMonitors:
        - "architecture"
        - "clock"
        - diskSpace:
            freeSpaceThreshold: "1GiB"
            freeSpaceWarningThreshold: "2GiB"
        - "swapSpace"
        - tmpSpace:
            freeSpaceThreshold: "1GiB"
            freeSpaceWarningThreshold: "2GiB"
        - "responseTime"
        numExecutors: 2
        primaryView:
          all:
            name: "all"
        projectNamingStrategy: "standard"
        quietPeriod: 5
        remotingSecurity:
          enabled: true
        scmCheckoutRetryCount: 0
        slaveAgentPort: 50000
        updateCenter:
          sites:
          - id: "default"
            url: "https://updates.jenkins.io/update-center.json"
        views:
        - all:
            name: "all"
        viewsTabBar: "standard"
      appearance:
        prism:
          theme: PRISM
      security:
        apiToken:
          creationOfLegacyTokenEnabled: false
          tokenGenerationOnCreationEnabled: false
          usageStatisticsEnabled: true
      unclassified:
        buildDiscarders:
          configuredBuildDiscarders:
          - "jobBuildDiscarder"
        fingerprints:
          fingerprintCleanupDisabled: false
          storage: "file"
        location:
          adminAddress: "address not configured yet <nobody@nowhere>"
          url: "http://127.0.0.1:8082/"
        pollSCM:
          pollingThreadCount: 10
      tool:
        mavenGlobalConfig:
          globalSettingsProvider: "standard"
          settingsProvider: "standard"     
      EOF
      
- shell: |
    rm -rf /etc/jenkins/jenkins-configuration.yml

- name: 'Start jenkins'
  service:
    name: jenkins
    state: running

- name: 'Wait for Jenkins to start up 2'
  uri:
    url: http://127.0.0.1:8082
    status_code: 200
    timeout: 5
  register: jenkins_service_status
  retries: 60
  delay: 5
  until: >
     'status' in jenkins_service_status and
     jenkins_service_status['status'] == 200

- name: 'Stop jenkins'
  service:
    name: jenkins
    state: stopped

- name: 'Remote temp config'
  shell: |
    rm -rf /etc/jenkins/jenkins-configuration.yml
  
- shell: |
    systemctl status jenkins.service
  register: output
  ignore_errors: True

- debug: 
    var: output

